# Makefile pour automatisation du pipeline de validation
# Syst√®me LUMEN - Pipeline de donn√©es officielles

.PHONY: help clean-validate validate-strict audit-ge version-dvc evidence-pack full-pipeline

# Variables
PYTHON = python3
DATA_DIR = data
LOGS_DIR = data/logs
EVIDENCE_DIR = evidence

# Aide
help:
	@echo "üîß PIPELINE DE VALIDATION LUMEN"
	@echo "================================"
	@echo ""
	@echo "üìã Commandes disponibles:"
	@echo "  clean-validate    - Nettoyage contr√¥l√© avec Dataprep + Pandera"
	@echo "  validate-strict   - Validation stricte avec sch√©mas Pandera"
	@echo "  audit-ge          - Audit automatique avec Great Expectations"
	@echo "  version-dvc       - Versioning avec DVC"
	@echo "  evidence-pack     - Cr√©ation du bundle de preuve"
	@echo "  full-pipeline     - Ex√©cution compl√®te du pipeline"
	@echo "  clean             - Nettoyage des fichiers temporaires"
	@echo ""

# Nettoyage contr√¥l√©
clean-validate:
	@echo "üßπ NETTOYAGE CONTR√îL√â"
	@echo "====================="
	$(PYTHON) clean_data_controlled.py
	@echo "‚úÖ Nettoyage termin√©"

# Validation stricte
validate-strict:
	@echo "üîç VALIDATION STRICTE"
	@echo "====================="
	$(PYTHON) validate_data_strict.py
	@echo "‚úÖ Validation termin√©e"

# Audit automatique
audit-ge:
	@echo "üìä AUDIT AUTOMATIQUE"
	@echo "===================="
	$(PYTHON) setup_great_expectations.py
	@echo "‚úÖ Audit configur√©"

# Versioning DVC
version-dvc:
	@echo "üîÑ VERSIONING DVC"
	@echo "================="
	$(PYTHON) setup_dvc.py
	@echo "‚úÖ Versioning configur√©"

# Bundle de preuve
evidence-pack:
	@echo "üß† BUNDLE DE PREUVE"
	@echo "==================="
	$(PYTHON) create_evidence_pack.py
	@echo "‚úÖ Bundle de preuve cr√©√©"

# Pipeline complet
full-pipeline: clean-validate validate-strict audit-ge version-dvc evidence-pack
	@echo "üéâ PIPELINE COMPLET TERMIN√â"
	@echo "==========================="
	@echo "‚úÖ Toutes les √©tapes ex√©cut√©es avec succ√®s"
	@echo "üìÅ R√©sultats dans: $(DATA_DIR)/"
	@echo "üì¶ Bundle de preuve: $(EVIDENCE_DIR)/"

# Nettoyage
clean:
	@echo "üßπ NETTOYAGE"
	@echo "============"
	rm -rf __pycache__/
	rm -rf .pytest_cache/
	rm -rf *.pyc
	rm -rf .DS_Store
	@echo "‚úÖ Nettoyage termin√©"

# V√©rification de l'√©tat
status:
	@echo "üìä √âTAT DU PIPELINE"
	@echo "==================="
	@echo "üìÅ Donn√©es brutes: $(shell find $(DATA_DIR)/raw -name "*.csv" 2>/dev/null | wc -l) fichiers"
	@echo "üßπ Donn√©es nettoy√©es: $(shell find $(DATA_DIR)/cleaned -name "*.csv" 2>/dev/null | wc -l) fichiers"
	@echo "‚úÖ Donn√©es valid√©es: $(shell find $(DATA_DIR)/validated -name "*.parquet" 2>/dev/null | wc -l) fichiers"
	@echo "üßä Donn√©es gel√©es: $(shell find $(DATA_DIR)/frozen -name "*.csv" 2>/dev/null | wc -l) fichiers"
	@echo "üìã Logs: $(shell find $(LOGS_DIR) -name "*.txt" -o -name "*.json" 2>/dev/null | wc -l) fichiers"
	@echo "üì¶ Bundle de preuve: $(shell find $(EVIDENCE_DIR) -name "*.json" 2>/dev/null | wc -l) fichiers"

# Installation des d√©pendances
install-deps:
	@echo "üì¶ INSTALLATION DES D√âPENDANCES"
	@echo "==============================="
	pip3 install dataprep pandera great-expectations dvc
	@echo "‚úÖ D√©pendances install√©es"

# Test de l'int√©grit√©
test-integrity:
	@echo "üîç TEST D'INT√âGRIT√â"
	@echo "=================="
	@if [ -d "$(EVIDENCE_DIR)" ]; then \
		echo "üì¶ Bundle de preuve trouv√©"; \
		ls -la $(EVIDENCE_DIR)/; \
	else \
		echo "‚ùå Bundle de preuve non trouv√©"; \
	fi
	@if [ -d "$(DATA_DIR)/validated" ]; then \
		echo "‚úÖ Donn√©es valid√©es trouv√©es"; \
		ls -la $(DATA_DIR)/validated/; \
	else \
		echo "‚ùå Donn√©es valid√©es non trouv√©es"; \
	fi

# Rapport de qualit√©
quality-report:
	@echo "üìä RAPPORT DE QUALIT√â"
	@echo "===================="
	@echo "üìÖ Date: $(shell date)"
	@echo "üîß Pipeline: LUMEN Data Validation"
	@echo "üìÅ Donn√©es trait√©es: $(shell find $(DATA_DIR) -name "*.csv" -o -name "*.parquet" 2>/dev/null | wc -l) fichiers"
	@echo "üìã Logs g√©n√©r√©s: $(shell find $(LOGS_DIR) -name "*.txt" -o -name "*.json" 2>/dev/null | wc -l) fichiers"
	@echo "üß† Bundle de preuve: $(shell find $(EVIDENCE_DIR) -name "*.json" 2>/dev/null | wc -l) composants"
	@echo ""
	@echo "‚úÖ GARANTIES:"
	@echo "‚Ä¢ 100% donn√©es officielles fran√ßaises"
	@echo "‚Ä¢ Validation stricte avec Pandera"
	@echo "‚Ä¢ Audit automatique avec Great Expectations"
	@echo "‚Ä¢ Versioning complet avec DVC"
	@echo "‚Ä¢ Checksums SHA256 pour int√©grit√©"
	@echo "‚Ä¢ Tra√ßabilit√© Git compl√®te"